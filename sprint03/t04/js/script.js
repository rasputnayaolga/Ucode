/* Следующий код определяет контрукцию замыкания, замыкание использовалось раньше для реализации закрытых скриптов, 
   чтобы код который подключали из вне (стороннх библиотек/фреймворков) не сломал работу скрипта написанного разработчиками.
   В 2021 году существование замыкания обусловленно только теоритической ценность и любовью старших разработчиков 
   задавать вопросы по нему на собеседованиях, поскольку тема очень мутная, и в ней 90% не разбирается до конца
*/

function concat(string1, string2) { //объявляем функцию concat, с двумя аргументами: string1 и string2
    function closure() { //объявляем внутреннюю вложенную функцию closure без аргументов
        closure.count++; //увеличиваем свойство функции count на 1 при каждом вызове функции
        return string1 + ' ' + prompt('Enter second string'); //возвращаем значение в переменной string1 конкатенированное с результатом ввода в модальное окно вызванное методом prompt (хранит в себе строку введенную пользователем)
    }
    closure.count = 0; //инициализируем свойство count функции closure и записываем в него 0 (тебе это не пригодится, свойства всегда будут задаваться только для объектов и классов)

    if (string2 === undefined) { //если значение в переменной string2 не переданно в функцию (и равно undefined) мы попадаем в код в фигурных скобках
       return closure; //возвращаем функцию closure не вызывая ее! 
    }

    return string1 +  ' ' + string2; //если предыдущий return не сработал потому что условие в if не было истинным, возвращается результат конкатенации строк в переменных string1 и string2
}
