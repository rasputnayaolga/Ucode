function getFormattedDate(date){ //объявляем функцию getFormattedDate с аргументом date, в который будет передаваться объект даты с временем
  let monthDay = formatDateNumber(date.getDate()); //объявляем переменную monthDay и записываем в нее значение даты при помощи метода date.getDate(), отформатированного в нужный формат через метод formatDateNumber
  let month = formatDateNumber(date.getMonth()); //объявляем переменную month и записываем в нее значение месяца при помощи метода date.getMonth(), отформатированного в нужный формат через метод formatDateNumber
  let year = date.getFullYear(); //объявляем переменную year и записываем в нее значение года при помощи метода date.getFullYear(), форматировать не нужно так как год возвращается в нужном по условию, 4 значном формате
  let hours = formatDateNumber(date.getHours()); //объявляем переменную hours и записываем в нее значение часов при помощи метода date.getHours(), отформатированного в нужный формат через метод formatDateNumber
  let minutes = formatDateNumber(date.getMinutes()); //объявляем переменную minutes и записываем в нее значение минут при помощи метода date.getMinutes(), отформатированного в нужный формат через метод formatDateNumber
  const days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]; //объявляем константу days и присваиваем ей массив с строчками представляющими дни недели, это нужно для того чтобы иметь доступ к строковому представляению дня недели имея численное значение из метода date.getDay(); от 0 до 6
  let dayNum = date.getDay(); //объявляем переменную dayNum и записываем в нее значение дня недели с помощью date.getDay(); в численном формате, от 0 (Воскресенье) до 6 (Суббота)
  let weekday = days[dayNum]; //объявляем переменную weekday и записываем в нее текстовое значение для недели из массива days по численному значению из предыдущей строки


  return `${monthDay}.${month}.${year} ${hours}:${minutes} ${weekday}`; //возвращаем строку с датой в нужном формате
}

//Данная функция вспомогательная, для форматирования невалидного значения без 0, если возвращается число от 1 до 9 функция возвращает в формате 01, 02.. 09
function formatDateNumber(number){  //объявляем фунцкцию formatDateNumber с аргументом функции number
    if (number <= 9){ //проверяем, является ли значение в аргументе number меньше или равным 9
        return `0${number}` //если да, ставим 0 перед значенем в number
    }else { //если значение number больше 9 (10, 11.. 31) выполянется код в фигурных скобках
        return number; //нам не нужно ничего делаеть с number, возвращаем как есть
    }
}